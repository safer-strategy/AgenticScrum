# Definition of Done - {{ project_name }}

A user story or task is considered "Done" when ALL of the following criteria are met:

## Code Complete
- [ ] All acceptance criteria have been implemented
- [ ] Code follows the project coding standards
- [ ] No TODO comments or debugging code remains
- [ ] Code has been self-reviewed by the developer

## Testing
- [ ] Unit tests written and passing (minimum 80% coverage)
- [ ] Integration tests written where applicable
- [ ] All existing tests continue to pass
- [ ] Manual testing completed for UI changes
- [ ] Edge cases have been considered and tested

## Code Quality
- [ ] Code has been linted with no errors
- [ ] No new warnings introduced
- [ ] Code complexity is within acceptable limits
- [ ] Performance implications considered
- [ ] Security best practices followed

## Documentation
- [ ] Code is self-documenting with clear naming
- [ ] Complex logic includes explanatory comments
- [ ] API documentation updated (if applicable)
- [ ] README updated (if applicable)
- [ ] User-facing documentation updated (if applicable)

## Review Process
- [ ] Code reviewed by at least one other agent/developer
- [ ] Review comments addressed
- [ ] Approved by QA Agent
- [ ] No merge conflicts

## Deployment Ready
- [ ] Feature flagged if necessary
- [ ] Database migrations tested (if applicable)
- [ ] Configuration changes documented
- [ ] Rollback plan identified
- [ ] Monitoring/alerts configured (if applicable)

## Agile Practices
- [ ] User story moved to "Done" column
- [ ] Sprint burndown updated
- [ ] Demo prepared (if applicable)
- [ ] Stakeholders notified of completion

## Special Considerations for AI-Generated Code
- [ ] Generated code has been reviewed for correctness
- [ ] No hallucinated imports or functions
- [ ] Follows established patterns in the codebase
- [ ] Integrates properly with existing code

---
*Note: This checklist should be reviewed and updated regularly based on team retrospectives and project needs.*